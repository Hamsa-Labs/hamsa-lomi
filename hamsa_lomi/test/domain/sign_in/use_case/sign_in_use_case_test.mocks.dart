// Mocks generated by Mockito 5.0.10 from annotations
// in hamsa_lomi/test/domain/sign_in/use_case/sign_in_use_case_test.dart.
// Do not manually edit this file.

// Dart imports:
import 'dart:async' as _i4;

// Package imports:
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// Project imports:
import 'package:hamsa_lomi/domain/core/failure.dart' as _i5;

import 'package:hamsa_lomi/domain/sign_in/entities/sign_in_credential.dart'
    as _i6;
import 'package:hamsa_lomi/domain/sign_in/repositories/sign_in_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [SignInRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignInRepository extends _i1.Mock implements _i3.SignInRepository {
  MockSignInRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> signInWithEmail(
          _i6.SignInCredential? credential) =>
      (super.noSuchMethod(Invocation.method(#signInWithEmail, [credential]),
              returnValue: Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
                  _FakeEither<_i5.Failure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}
